version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.6-node-browsers
        environment:
          - BUNDLER_VERSION: 1.17.3
          - RAILS_ENV: "test"
      - image: circleci/mysql:8.0
        command: --default-authentication-plugin=mysql_native_password
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          - MYSQL_ROOT_HOST: "127.0.0.1"

    working_directory: ~/dog_pf

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 1.17.3
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: mv ./config/database.yml.ci ./config/database.yml

      # Database setup
      - run:
          name: Database setup
          command: |
            bundle exec rake db:create db:schema:load --trace
            bundle exec rake db:migrate

      # rspec
      - run:
          name: Run rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      #rubocop
      - run:
          name: Run rubocop
          command: bundle exec rubocop

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  heroku_deploy:
    machine:
      enabled: true
    working_directory: ~/dog_pf
    steps:
      - checkout

      - run:
          name: deploy
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git master

      - run:
          name: Run post-deploy tasks
          command: |
            heroku run bin/rails db:migrate

workflows:
  version: 2
  build:
    jobs:
      - build
      - heroku_deploy:
          requires:
            - build
